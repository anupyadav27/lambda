import boto3
import json

# Initialize AWS clients
s3_client = boto3.client('s3')
rekognition_client = boto3.client('rekognition')
bedrock_client = boto3.client('bedrock')

def lambda_handler(event, context):
    # Extract bucket name and object key from the S3 event
    bucket_name = event['Records'][0]['s3']['bucket']['name']
    object_key = event['Records'][0]['s3']['object']['key']
    
    # Get the image from S3
    response = s3_client.get_object(Bucket=bucket_name, Key=object_key)
    image_data = response['Body'].read()

    # Call Rekognition to detect labels in the image
    rekognition_response = rekognition_client.detect_labels(
        Image={'Bytes': image_data},
        MaxLabels=10
    )

    # Extract the labels detected by Rekognition
    labels = [label['Name'] for label in rekognition_response['Labels']]
    labels_text = ', '.join(labels)

    # Prepare the input payload for the Bedrock model (Anthropic Claude)
    input_payload = {
        "inputs": {
            "image_labels": labels_text,
            "text": "Provide a description or analysis based on these labels."
        },
        "model": "anthropic.claude-3-haiku-20240307-v1:0:200k",  # Ensure this is the correct model ID
        "output": {
            "type": "text"
        }
    }

    # Send the request to the Bedrock model
    bedrock_response = bedrock_client.invoke_model(
        modelId='anthropic.claude-3-haiku-20240307-v1:0:200k',  # Replace with the correct model ID if different
        contentType='application/json',
        accept='application/json',
        body=json.dumps(input_payload)
    )

    # Parse the response from the model
    model_response = json.loads(bedrock_response['body'])
    return {
        'statusCode': 200,
        'body': json.dumps({'response': model_response['text']})
    }
